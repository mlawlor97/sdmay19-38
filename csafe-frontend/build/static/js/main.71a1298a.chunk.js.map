{"version":3,"sources":["components/SearchBar.js","components/DropDown.js","components/ScrollView.js","components/ScrollElement.js","dropdownOptions/keywordOptions.js","dropdownOptions/versions.js","App.js","serviceWorker.js","index.js"],"names":["SearchBar","props","react_default","a","createElement","id","onSubmit","type","value","onChange","DropDown","groupStyles","display","alignItems","justifyContent","groupBadgeStyles","backgroundColor","borderRadius","color","fontSize","fontWeight","lineHeight","minWidth","padding","textAlign","react_select_esm","defaultValue","onKeywordChange","options","formatGroupLabel","data","style","label","length","isClearable","isSearchable","isMulti","ScrollView","elements","register","name","ref","_this","unregister","scroll","this","React","Children","only","children","Component","childContextTypes","PropTypes","object","ScrollElement","context","_element","onClick","cloneElement","contextTypes","keywordOptions","group","generateVersionOptions","objectArray","versions","versionObj","map","obj","push","axios","require","App","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","keyword","keywordFilter","response","newData","displayVersion","evidenceData","refresh","stats","responseVersions","bind","assertThisInitialized","handleKeywordTypeChange","onAppClick","handleVersionChange","handleFiles","grabStats","downloadAPK","_this2","captainFalcon","forEach","version","_id","setTimeout","file","window","open","_this3","get","then","res","statView","className","stores","count","setState","catch","err","console","log","files","_this4","reader","FileReader","onload","e","input","result","split","postBody","i","appData","packageName","appStore","appVersion","post","dataArray","element","dataObj","app_id","store_id","app_name","Developer","metadata","Package","Category","url","readAsText","event","target","selectedOption","versionData","filter","_this5","boy","apk_type","file_size","requirements","publish_date","patch_notes","signature","sha1","undefined","permissions","permission","report","reportArray","reportObj","fileSystemArray","networkArray","app_evidence","file_system","fileSystemObj","path","evidence_types","network","networkObj","app_package_name","toString","yeet","_this6","preventDefault","params","appName","_this7","sView","components_ScrollView","scroller","_scroller","_ref","components_ScrollElement","react_router_dom","to","concat","href","screen","components_SearchBar","react_file_reader_default","fileTypes","components_DropDown","infoScreen","keys","key","react_router","exact","render","Boolean","location","hostname","match","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","registration"],"mappings":"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","file":"static/js/main.71a1298a.chunk.js","sourcesContent":["import React from 'react'\n\nfunction SearchBar(props) {\n  return (\n    <div id=\"search-bar\">\n      <form onSubmit={props.onSubmit}>\n        <label>\n          Keyword:\n          <input type=\"text\" value={props.value} onChange={props.onChange} />\n        </label>\n        <input type=\"submit\" value=\"Submit\" />\n      </form>\n    </div>\n  )\n}\n\nexport default SearchBar\n","import React from 'react'\nimport Select from 'react-select'\n\nfunction DropDown(props) {\n  const groupStyles = {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between'\n  }\n\n  const groupBadgeStyles = {\n    backgroundColor: '#EBECF0',\n    borderRadius: '2em',\n    color: '#172B4D',\n    display: 'inline-block',\n    fontSize: 12,\n    fontWeight: 'normal',\n    lineHeight: '1',\n    minWidth: 1,\n    padding: '0.16666666666667em 0.5em',\n    textAlign: 'center'\n  }\n\n  const formatGroupLabel = data => (\n    <div style={groupStyles}>\n      <span>{data.label}</span>\n      <span style={groupBadgeStyles}>{data.options.length}</span>\n    </div>\n  )\n\n  return (\n    <div>\n      <Select\n        defaultValue={props.defaultValue}\n        onChange={props.onKeywordChange}\n        options={props.options}\n        formatGroupLabel={formatGroupLabel}\n        isClearable={false}\n        isSearchable={false}\n        isMulti={false}\n      />\n    </div>\n  )\n}\n\nexport default DropDown\n","import React, { Component } from 'react'\nimport { findDOMNode } from 'react-dom'\nimport scrollIntoView from 'scroll-into-view'\nimport PropTypes from 'prop-types'\n\nclass ScrollView extends Component {\n  static childContextTypes = {\n    scroll: PropTypes.object\n  }\n  elements = {}\n  register = (name, ref) => {\n    this.elements[name] = ref\n  }\n  unregister = name => {\n    delete this.elements[name]\n  }\n  getChildContext() {\n    return {\n      scroll: {\n        register: this.register,\n        unregister: this.unregister\n      }\n    }\n  }\n  // scrollTo = name => {\n  //   const node = findDOMNode(this.elements[name])\n  //   scrollIntoView(node, {\n  //     time: 500,\n  //     align: {\n  //       top: 0\n  //     }\n  //   })\n  // }\n  render() {\n    return React.Children.only(this.props.children)\n  }\n}\n\nexport default ScrollView\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nclass ScrollElement extends Component {\n  static contextTypes = {\n    scroll: PropTypes.object\n  }\n  componentDidMount() {\n    this.context.scroll.register(this.props.name, this._element)\n  }\n  componentWillUnmount() {\n    this.context.scroll.unregister(this.props.name)\n  }\n\n  render() {\n    return (\n      <div onClick={this.props.onClick}>\n        {React.cloneElement(this.props.children, {\n          ref: ref => (this._element = ref)\n        })}\n      </div>\n    )\n  }\n}\n\nexport default ScrollElement\n","const keywordOptions = [\n  {\n    label: 'Keywords',\n    options: [\n      { value: 'appName', label: 'App Name', group: 'Keywords' },\n      { value: 'packageName', label: 'Package Name', group: 'Keywords' }\n    ]\n  }\n]\n\nexport default keywordOptions\n","function generateVersionOptions(objectArray) {\n  const versions = []\n  const versionObj = {}\n  versionObj['label'] = 'Versions'\n  const options = objectArray.map(obj => {\n    return { value: obj['version'], label: obj['version'], group: 'Versions' }\n  })\n\n  versionObj['options'] = options\n  versions.push(versionObj)\n\n  return versions\n}\n\nexport default generateVersionOptions\n","import React, { Component } from 'react'\nimport { BrowserRouter as Router, Link, Route } from 'react-router-dom'\nimport './CSS/App.css'\n\nimport SearchBar from './components/SearchBar'\nimport DropDown from './components/DropDown'\nimport ScrollView from './components/ScrollView'\nimport ScrollElement from './components/ScrollElement'\nimport keywordOptions from './dropdownOptions/keywordOptions'\nimport generateVersionOptions from './dropdownOptions/versions'\nimport ReactFileReader from 'react-file-reader'\n\nconst axios = require('axios')\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      keyword: '',\n      keywordFilter: 'appName',\n      versions: [],\n      response: [],\n      newData: [],\n      displayVersion: [],\n      evidenceData: [],\n      refresh: true,\n      stats: '',\n      responseVersions: []\n    }\n\n    this.onKeywordChange = this.onKeywordChange.bind(this)\n    this.onSubmit = this.onSubmit.bind(this)\n    this.handleKeywordTypeChange = this.handleKeywordTypeChange.bind(this)\n    this.onAppClick = this.onAppClick.bind(this)\n    this.handleVersionChange = this.handleVersionChange.bind(this)\n    this.handleFiles = this.handleFiles.bind(this)\n    this.grabStats = this.grabStats.bind(this)\n    this.downloadAPK = this.downloadAPK.bind(this)\n  }\n\n  downloadAPK() {\n    let captainFalcon = ''\n    this.state.responseVersions.forEach(version => {\n      if (version.version === this.state.displayVersion[0].version) {\n        captainFalcon = version._id\n      }\n    })\n    setTimeout(() => {\n      const response = {\n        file: 'http://104.154.58.44:3000/api/v1/download/' + captainFalcon\n      }\n\n      window.open(response.file)\n    }, 100)\n  }\n\n  grabStats() {\n    axios\n      .get('http://104.154.58.44:3000/api/v1/stats')\n      .then(res => {\n        const statView = (\n          <div className=\"stats\">\n            <ul>\n              <b>{'applications'}</b> {': ' + res.data['applications']}\n            </ul>\n            <ul>\n              <b>{'versions'}</b> {': ' + res.data['versions']}\n            </ul>\n            <ul>\n              <b>{'Store'}</b> {': ' + res.data.stores[0]._id}\n              <br />\n              <b>{'Number of Apps'}</b> {': ' + res.data.stores[0].count}\n            </ul>\n            <ul>\n              <b>{'Store'}</b> {': ' + res.data.stores[1]._id}\n              <br />\n              <b>{'Number of Apps'}</b> {': ' + res.data.stores[1].count}\n            </ul>\n          </div>\n        )\n        this.setState({ stats: statView })\n      })\n      .catch(err => {\n        console.log(err)\n      })\n  }\n\n  handleFiles(files) {\n    var reader = new FileReader()\n    reader.onload = e => {\n      // Use reader.result\n      // csv format: package name, app store, version\n      const input = reader.result.split(',')\n      const postBody = []\n      for (let i = 0; i < input.length; i += 3) {\n        const appData = {\n          packageName: input[i],\n          appStore: input[i + 1],\n          appVersion: input[i + 2]\n        }\n\n        postBody.push(appData)\n      }\n      axios\n        .post('http://104.154.58.44:3000/api/v1/applications/', {\n          appData: postBody\n        })\n        .then(res => {\n          const dataArray = []\n          res.data.forEach(element => {\n            const dataObj = {\n              app_id: element['_id'],\n              store_id: element['store_id'],\n              app_name: element['app_name'],\n              Developer: element.metadata['developer'],\n              Package: element.metadata['package'],\n              Category: element.metadata['category'],\n              url: element['app_url']\n            }\n\n            if (element.versions) {\n              dataObj['Version'] = element.versions[0].version\n            }\n\n            dataArray.push(dataObj)\n          })\n\n          this.setState({ response: dataArray })\n        })\n        .catch(err => {\n          console.log('error')\n          console.log(err)\n        })\n    }\n    reader.readAsText(files[0])\n  }\n\n  onKeywordChange(event) {\n    this.setState({ keyword: event.target.value })\n  }\n\n  handleKeywordTypeChange(selectedOption) {\n    this.setState({ keywordFilter: selectedOption.value })\n  }\n\n  handleVersionChange(selectedOption) {\n    const versionData = this.state.newData.filter(\n      obj => obj['version'] === selectedOption.value\n    )\n\n    this.setState({ displayVersion: versionData })\n  }\n\n  onAppClick(event) {\n    this.setState({ newData: [] })\n    this.setState({ displayVersion: [] })\n    this.setState({ versions: [] })\n    this.setState({ evidenceData: [] })\n    const dataArray = []\n    axios\n      .get('http://104.154.58.44:3000/api/v1/applications/' + event)\n      .then(res => {\n        this.setState({ responseVersions: res.data[0].versions })\n        const boy = res.data[0]\n\n        const dataObj = {\n          store_id: boy['store_id'],\n          app_name: boy['app_name'],\n          Developer: boy.metadata['developer'],\n          Package: boy.metadata['package'],\n          Category: boy.metadata['category'],\n          url: boy['app_url']\n        }\n\n        dataArray.push(dataObj)\n\n        boy.versions.forEach(obj => {\n          const dataObj = {\n            store_id: obj['store_id'],\n            app_name: obj['app_name'],\n            version: obj['version'],\n            apk_type: obj.metadata['apk_type'],\n            file_size: obj.metadata['file_size'],\n            requirements: obj.metadata['requirements'],\n            publish_date: obj.metadata['publish_date'],\n            patch_notes: obj.metadata['patch_notes'],\n            signature: obj.metadata['signature'],\n            sha1: obj.metadata['sha1']\n          }\n\n          if (obj.metadata.permissions !== undefined) {\n            obj.metadata.permissions.forEach(permission => {\n              dataObj['permissions'] += '\\n' + permission\n            })\n          }\n\n          if (obj.metadata['apk_type'] === undefined) {\n            dataObj['apk_type'] = 'APK'\n          }\n\n          dataArray.push(dataObj)\n        })\n\n        if (boy.versions[0].report.length !== 0) {\n          const reportArray = []\n          const reportObj = boy.versions[0].report\n\n          const fileSystemArray = []\n          const networkArray = []\n          if (reportObj[0].report.app_evidence[1].file_system.length) {\n            reportObj[0].report.app_evidence[1].file_system.forEach(element => {\n              const fileSystemObj = {\n                path: element.path,\n                evidence_types: element.evidence_types\n              }\n\n              fileSystemArray.push(fileSystemObj)\n            })\n          }\n\n          if (reportObj[0].report.app_evidence[2].network.length) {\n            reportObj[0].report.app_evidence[2].network.forEach(element => {\n              const networkObj = {\n                path: element.path,\n                evidence_types: element.evidence_types\n              }\n\n              networkArray.push(networkObj)\n            })\n          }\n\n          fileSystemArray.forEach((e, i) => {\n            const dataObj = {\n              app_package_name: boy.metadata['package'],\n              version: reportObj.version\n            }\n            if (fileSystemArray[i]) {\n              dataObj['file path'] = fileSystemArray[i].path\n              dataObj['file evidence types'] = fileSystemArray[\n                i\n              ].evidence_types.toString()\n            }\n\n            if (networkArray[i]) {\n              dataObj['network address'] = fileSystemArray[i].path\n              dataObj['network evidence types'] = fileSystemArray[\n                i\n              ].evidence_types.toString()\n            }\n\n            reportArray.push(dataObj)\n          })\n\n          this.setState({ evidenceData: reportArray })\n        } else {\n          this.setState({ evidenceData: [] })\n        }\n\n        const yeet = []\n        yeet.push(dataArray[1])\n        this.setState({ versions: generateVersionOptions(boy.versions) })\n        this.setState({ newData: dataArray })\n        this.setState({ displayVersion: yeet })\n      })\n      .catch(err => {\n        console.log(err)\n      })\n  }\n\n  onSubmit(event) {\n    event.preventDefault()\n    if (this.state.keywordFilter === 'appName') {\n      axios\n        .get('http://104.154.58.44:3000/api/v1/applications', {\n          params: {\n            appName: this.state.keyword\n          }\n        })\n        .then(res => {\n          const dataArray = []\n          res.data.forEach(element => {\n            const dataObj = {\n              app_id: element['_id'],\n              store_id: element['store_id'],\n              app_name: element['app_name'],\n              Developer: element.metadata['developer'],\n              Package: element.metadata['package'],\n              Category: element.metadata['category'],\n              url: element['app_url']\n            }\n\n            if (element.versions) {\n              dataObj['Version'] = element.versions[0].version\n            }\n\n            dataArray.push(dataObj)\n          })\n          this.setState({ response: dataArray })\n          this.setState({ refresh: false })\n        })\n        .catch(err => {\n          this.setState({ response: [] })\n        })\n    } else if (this.state.keywordFilter === 'packageName') {\n      axios\n        .get('http://104.154.58.44:3000/api/v1/applications', {\n          params: {\n            packageName: this.state.keyword\n          }\n        })\n        .then(res => {\n          const dataArray = []\n          res.data.forEach(element => {\n            const dataObj = {\n              app_id: element['_id'],\n              store_id: element['store_id'],\n              app_name: element['app_name'],\n              Developer: element.metadata['developer'],\n              Package: element.metadata['package'],\n              Category: element.metadata['category'],\n              url: element['app_url']\n            }\n\n            if (element.versions) {\n              dataObj['Version'] = element.versions[0].version\n            }\n\n            dataArray.push(dataObj)\n          })\n          this.setState({ response: dataArray })\n          this.setState({ refresh: false })\n        })\n        .catch(err => {\n          this.setState({ response: [] })\n        })\n    }\n  }\n\n  componentWillMount() {\n    this.grabStats()\n  }\n\n  render() {\n    const sView = (\n      <ScrollView ref={scroller => (this._scroller = scroller)}>\n        <div className=\"scroller\">\n          {this.state.response.map(\n            ({\n              app_name,\n              Developer,\n              Package,\n              Category,\n              url,\n              app_id,\n              store_id\n            }) => {\n              return (\n                <ScrollElement name={app_name}>\n                  <div className=\"item\" onClick={() => this.onAppClick(app_id)}>\n                    <Link className=\"routeLink\" to={`/app/${app_id}`}>\n                      <ul>\n                        <b>{'App Name'}</b>\n                        {': ' + app_name}\n                      </ul>\n                      <ul>\n                        <b>{'Developer'}</b>\n                        {': ' + Developer}\n                      </ul>\n                      <ul>\n                        <b>{'Package'}</b>\n                        {': ' + Package}\n                      </ul>\n                      <ul>\n                        <b>{'Store'}</b>\n                        {': ' + store_id}{' '}\n                      </ul>\n                      <ul>\n                        <b>{'Category'}</b>\n                        {': ' + Category}\n                      </ul>\n                    </Link>\n                    <ul>\n                      <b>{'URL: '}</b>\n                      <a href={url}>{url}</a>\n                    </ul>\n                  </div>\n                </ScrollElement>\n              )\n            }\n          )}\n        </div>\n      </ScrollView>\n    )\n    const screen = (\n      <header className=\"App-header\">\n        <div className=\"gridwrapper\">\n          <div className=\"menu\">\n            <h1 id=\"header\">Forensic Android App Database</h1>\n            <div className=\"searchbar\">\n              <SearchBar\n                onSubmit={this.onSubmit}\n                value={this.state.keyword}\n                onChange={this.onKeywordChange}\n              />\n            </div>\n            <div className=\"filereader\">\n              <ReactFileReader\n                handleFiles={this.handleFiles}\n                fileTypes={['.csv', '.txt']}\n              >\n                <button className=\"btn\">Upload</button>\n              </ReactFileReader>\n              {/* <span\n                title={'CSV format is app package name, version, app store'}\n              >\n                !\n              </span> */}\n            </div>\n            <div className=\"dropdown\">\n              <DropDown\n                onKeywordChange={this.handleKeywordTypeChange}\n                options={keywordOptions}\n                defaultValue={keywordOptions[0].options[0]}\n              />\n            </div>\n          </div>\n          {this.state.refresh ? this.state.stats : sView}\n        </div>\n      </header>\n    )\n\n    const infoScreen = (\n      <header className=\"App-header\">\n        <div className=\"gridwrapperInfo\">\n          <div className=\"menu\">\n            <h1 id=\"header\">Forensic Android App Database</h1>\n            <button onClick={this.downloadAPK}>Download APK</button>\n            <DropDown\n              onKeywordChange={this.handleVersionChange}\n              options={this.state.versions}\n              defaultValue={this.state.versions[0]}\n            />\n          </div>\n          <div className=\"scrollerInfo\">\n            <ScrollView ref={scroller => (this._scroller = scroller)}>\n              <div id=\"left\">\n                {this.state.displayVersion.map(obj => {\n                  return (\n                    <ScrollElement name={obj.app_name}>\n                      <div className=\"itemInfo\">\n                        {Object.keys(obj).map(key => {\n                          return (\n                            <ul>\n                              <b>{key}</b> {': ' + obj[key]}\n                            </ul>\n                          )\n                        })}\n                      </div>\n                    </ScrollElement>\n                  )\n                })}\n              </div>\n            </ScrollView>\n            <ScrollView ref={scroller => (this._scroller = scroller)}>\n              <div id=\"right\">\n                {this.state.evidenceData.map(obj => {\n                  return (\n                    <ScrollElement name={obj.app_name}>\n                      <div className=\"itemInfo\">\n                        {Object.keys(obj).map(key => {\n                          return (\n                            <ul>\n                              <b>{key}</b> {': ' + obj[key]}\n                            </ul>\n                          )\n                        })}\n                      </div>\n                    </ScrollElement>\n                  )\n                })}\n              </div>\n            </ScrollView>\n          </div>\n        </div>\n      </header>\n    )\n\n    return (\n      <Router>\n        <div className=\"App\">\n          <Route exact={true} path=\"/\" render={() => screen} />\n          <Route path=\"/app/:app_id\" render={() => infoScreen} />\n        </div>\n      </Router>\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}